FROM node:22-bookworm AS lazer

WORKDIR /code/lazer_app/projectLazer/
COPY ./ /code/

RUN --mount=type=cache,target=/root/.npm,sharing=locked \
    npm install

RUN npx ionic build


FROM python:3.13-bullseye

RUN set -eux; \
    rm -f /etc/apt/apt.conf.d/docker-clean; \
    echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache;
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update \
    && apt-get install -y gettext binutils libproj-dev gdal-bin

ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ARG USER_ID
ARG GROUP_ID
RUN groupadd -o -g $GROUP_ID -r usergrp
RUN useradd -o -m -u $USER_ID -g $GROUP_ID user
RUN mkdir /code
RUN chown user /code
ENV PATH="${PATH}:/home/user/.local/bin"

RUN pip install playwright
RUN playwright install-deps chromium

USER user
WORKDIR /code
COPY requirements /code/requirements
RUN --mount=type=cache,target=/home/user/.cache/pip \
    pip install -r requirements/base.txt
RUN --mount=type=cache,target=/home/user/.cache/pip \
    pip install -r requirements/dev.txt
RUN --mount=type=cache,target=/home/user/.cache/pip \
    pip install -r requirements/deploy.txt

RUN playwright install chromium

COPY . /code/
